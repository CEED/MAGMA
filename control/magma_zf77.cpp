/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl --wrappers ../include/magma_z.h
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
#define DEVPTR(__ptr) ((magmaDoubleComplex*)(__ptr))
#else
#define DEVPTR(__ptr) ((magmaDoubleComplex*)(uintptr_t)(*(__ptr)))
#endif

#ifndef MAGMA_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_
#elif defined(NOCHANGE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname
#elif defined(UPCASE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME
#endif
#endif

#ifndef MAGMA_GPU_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu_
#elif defined(NOCHANGE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu
#elif defined(UPCASE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME##_GPU
#endif
#endif

#define PRECISION_z

#ifdef __cplusplus
extern "C" {
#endif

/*
 *   -- MAGMA (version 1.1) --
 *      Univ. of Tennessee, Knoxville
 *      Univ. of California, Berkeley
 *      Univ. of Colorado, Denver
 *      November 2011
 *
 * @precisions normal z -> s d c
 */




/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA Auxiliary functions to get the NB used
*/
#define magmaf_get_zpotrf_nb MAGMA_FORTRAN_NAME( get_zpotrf_nb, GET_ZPOTRF_NB )
magma_int_t magmaf_get_zpotrf_nb( magma_int_t *m )
{
    return magma_get_zpotrf_nb( *m );
}

#define magmaf_get_zgetrf_nb MAGMA_FORTRAN_NAME( get_zgetrf_nb, GET_ZGETRF_NB )
magma_int_t magmaf_get_zgetrf_nb( magma_int_t *m )
{
    return magma_get_zgetrf_nb( *m );
}

#define magmaf_get_zgetri_nb MAGMA_FORTRAN_NAME( get_zgetri_nb, GET_ZGETRI_NB )
magma_int_t magmaf_get_zgetri_nb( magma_int_t *m )
{
    return magma_get_zgetri_nb( *m );
}

#define magmaf_get_zgeqp3_nb MAGMA_FORTRAN_NAME( get_zgeqp3_nb, GET_ZGEQP3_NB )
magma_int_t magmaf_get_zgeqp3_nb( magma_int_t *m )
{
    return magma_get_zgeqp3_nb( *m );
}

#define magmaf_get_zgeqrf_nb MAGMA_FORTRAN_NAME( get_zgeqrf_nb, GET_ZGEQRF_NB )
magma_int_t magmaf_get_zgeqrf_nb( magma_int_t *m )
{
    return magma_get_zgeqrf_nb( *m );
}

#define magmaf_get_zgeqlf_nb MAGMA_FORTRAN_NAME( get_zgeqlf_nb, GET_ZGEQLF_NB )
magma_int_t magmaf_get_zgeqlf_nb( magma_int_t *m )
{
    return magma_get_zgeqlf_nb( *m );
}

#define magmaf_get_zgehrd_nb MAGMA_FORTRAN_NAME( get_zgehrd_nb, GET_ZGEHRD_NB )
magma_int_t magmaf_get_zgehrd_nb( magma_int_t *m )
{
    return magma_get_zgehrd_nb( *m );
}

#define magmaf_get_zhetrd_nb MAGMA_FORTRAN_NAME( get_zhetrd_nb, GET_ZHETRD_NB )
magma_int_t magmaf_get_zhetrd_nb( magma_int_t *m )
{
    return magma_get_zhetrd_nb( *m );
}

#define magmaf_get_zgelqf_nb MAGMA_FORTRAN_NAME( get_zgelqf_nb, GET_ZGELQF_NB )
magma_int_t magmaf_get_zgelqf_nb( magma_int_t *m )
{
    return magma_get_zgelqf_nb( *m );
}

#define magmaf_get_zgebrd_nb MAGMA_FORTRAN_NAME( get_zgebrd_nb, GET_ZGEBRD_NB )
magma_int_t magmaf_get_zgebrd_nb( magma_int_t *m )
{
    return magma_get_zgebrd_nb( *m );
}

#define magmaf_get_zhegst_nb MAGMA_FORTRAN_NAME( get_zhegst_nb, GET_ZHEGST_NB )
magma_int_t magmaf_get_zhegst_nb( magma_int_t *m )
{
    return magma_get_zhegst_nb( *m );
}

#define magmaf_get_zgesvd_nb MAGMA_FORTRAN_NAME( get_zgesvd_nb, GET_ZGESVD_NB )
magma_int_t magmaf_get_zgesvd_nb( magma_int_t *m )
{
    return magma_get_zgesvd_nb( *m );
}

/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA function definitions / Data on CPU
*/
#define magmaf_zgebrd MAGMA_FORTRAN_NAME( zgebrd, ZGEBRD )
void magmaf_zgebrd(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    double *d,
    double *e,
    magmaDoubleComplex *tauq,
    magmaDoubleComplex *taup,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magmaf_zgehrd2 MAGMA_FORTRAN_NAME( zgehrd2, ZGEHRD2 )
void magmaf_zgehrd2(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgehrd MAGMA_FORTRAN_NAME( zgehrd, ZGEHRD )
void magmaf_zgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_zgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        DEVPTR(dT),
        info );
}

#define magmaf_zgelqf MAGMA_FORTRAN_NAME( zgelqf, ZGELQF )
void magmaf_zgelqf(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgeqlf MAGMA_FORTRAN_NAME( zgeqlf, ZGEQLF )
void magmaf_zgeqlf(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgeqrf MAGMA_FORTRAN_NAME( zgeqrf, ZGEQRF )
void magmaf_zgeqrf(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgeqrf4 MAGMA_FORTRAN_NAME( zgeqrf4, ZGEQRF4 )
void magmaf_zgeqrf4(
    magma_int_t *num_gpus, magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeqrf4(
        *num_gpus, *m, *n,
        a, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgeqrf_ooc MAGMA_FORTRAN_NAME( zgeqrf_ooc, ZGEQRF_OOC )
void magmaf_zgeqrf_ooc(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgesv MAGMA_FORTRAN_NAME( zgesv, ZGESV )
void magmaf_zgesv(
    magma_int_t *n, magma_int_t *nrhs,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magmaDoubleComplex *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_zgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magmaf_zgetrf MAGMA_FORTRAN_NAME( zgetrf, ZGETRF )
void magmaf_zgetrf(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_zgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magmaf_zposv MAGMA_FORTRAN_NAME( zposv, ZPOSV )
void magmaf_zposv(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_zposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magmaf_zpotrf MAGMA_FORTRAN_NAME( zpotrf, ZPOTRF )
void magmaf_zpotrf(
    char *uplo, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_zpotrf(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_zpotri MAGMA_FORTRAN_NAME( zpotri, ZPOTRI )
void magmaf_zpotri(
    char *uplo, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_zpotri(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_zlauum MAGMA_FORTRAN_NAME( zlauum, ZLAUUM )
void magmaf_zlauum(
    char *uplo, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_zlauum(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_ztrtri MAGMA_FORTRAN_NAME( ztrtri, ZTRTRI )
void magmaf_ztrtri(
    char *uplo, char *diag, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_ztrtri(
        *uplo, *diag, *n,
        A, *lda,
        info );
}

#define magmaf_zhetrd MAGMA_FORTRAN_NAME( zhetrd, ZHETRD )
void magmaf_zhetrd(
    char *uplo, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    double *d,
    double *e,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zhetrd(
        *uplo, *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zungqr MAGMA_FORTRAN_NAME( zungqr, ZUNGQR )
void magmaf_zungqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zungqr(
        *m, *n, *k,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_zunmql MAGMA_FORTRAN_NAME( zunmql, ZUNMQL )
void magmaf_zunmql(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *c, magma_int_t *ldc,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zunmql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_zunmqr MAGMA_FORTRAN_NAME( zunmqr, ZUNMQR )
void magmaf_zunmqr(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *c, magma_int_t *ldc,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zunmqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_zunmtr MAGMA_FORTRAN_NAME( zunmtr, ZUNMTR )
void magmaf_zunmtr(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *c, magma_int_t *ldc,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zunmtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_zunghr MAGMA_FORTRAN_NAME( zunghr, ZUNGHR )
void magmaf_zunghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zunghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)

#define magmaf_zgeev MAGMA_FORTRAN_NAME( zgeev, ZGEEV )
void magmaf_zgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *w,
    magmaDoubleComplex *vl, magma_int_t *ldvl,
    magmaDoubleComplex *vr, magma_int_t *ldvr,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_zgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        w,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_zgeqp3 MAGMA_FORTRAN_NAME( zgeqp3, ZGEQP3 )
void magmaf_zgeqp3(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magma_int_t *jpvt,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_zgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_zgesvd MAGMA_FORTRAN_NAME( zgesvd, ZGESVD )
void magmaf_zgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    double *s,
    magmaDoubleComplex *u, magma_int_t *ldu,
    magmaDoubleComplex *vt, magma_int_t *ldvt,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_zgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_zheevd MAGMA_FORTRAN_NAME( zheevd, ZHEEVD )
void magmaf_zheevd(
    char *jobz, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevdx MAGMA_FORTRAN_NAME( zheevdx, ZHEEVDX )
void magmaf_zheevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevx MAGMA_FORTRAN_NAME( zheevx, ZHEEVX )
void magmaf_zheevx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *z, magma_int_t *ldz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_zheevx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_zheevr MAGMA_FORTRAN_NAME( zheevr, ZHEEVR )
void magmaf_zheevr(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevr(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zhegvd MAGMA_FORTRAN_NAME( zhegvd, ZHEGVD )
void magmaf_zhegvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zhegvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zhegvdx MAGMA_FORTRAN_NAME( zhegvdx, ZHEGVDX )
void magmaf_zhegvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zhegvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zhegvx MAGMA_FORTRAN_NAME( zhegvx, ZHEGVX )
void magmaf_zhegvx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *z, magma_int_t *ldz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_zhegvx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_zhegvr MAGMA_FORTRAN_NAME( zhegvr, ZHEGVR )
void magmaf_zhegvr(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zhegvr(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zstedx MAGMA_FORTRAN_NAME( zstedx, ZSTEDX )
void magmaf_zstedx(
    char *range, magma_int_t *n, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    double *D,
    double *E,
    magmaDoubleComplex *Z, magma_int_t *ldz,
    double *rwork, magma_int_t *ldrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    double *dwork,
    magma_int_t *info )
{
    magma_zstedx(
        *range, *n, *vl, *vu, *il, *iu,
        D,
        E,
        Z, *ldz,
        rwork, *ldrwork,
        iwork, *liwork,
        dwork,
        info );
}

#else /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_zgeev MAGMA_FORTRAN_NAME( zgeev, ZGEEV )
void magmaf_zgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *wr,
    magmaDoubleComplex *wi,
    magmaDoubleComplex *vl, magma_int_t *ldvl,
    magmaDoubleComplex *vr, magma_int_t *ldvr,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        wr,
        wi,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#define magmaf_zgeqp3 MAGMA_FORTRAN_NAME( zgeqp3, ZGEQP3 )
void magmaf_zgeqp3(
    magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magma_int_t *jpvt,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgesvd MAGMA_FORTRAN_NAME( zgesvd, ZGESVD )
void magmaf_zgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    double *s,
    magmaDoubleComplex *u, magma_int_t *ldu,
    magmaDoubleComplex *vt, magma_int_t *ldvt,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        info );
}

#define magmaf_zheevd MAGMA_FORTRAN_NAME( zheevd, ZHEEVD )
void magmaf_zheevd(
    char *jobz, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevdx MAGMA_FORTRAN_NAME( zheevdx, ZHEEVDX )
void magmaf_zheevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_zhegvd MAGMA_FORTRAN_NAME( zhegvd, ZHEGVD )
void magmaf_zhegvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zhegvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_zhegvdx MAGMA_FORTRAN_NAME( zhegvdx, ZHEGVDX )
void magmaf_zhegvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zhegvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_zstedx MAGMA_FORTRAN_NAME( zstedx, ZSTEDX )
void magmaf_zstedx(
    char *range, magma_int_t *n, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    double *d,
    double *e,
    double *z, magma_int_t *ldz,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    double *dwork,
    magma_int_t *info )
{
    magma_zstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        work, *lwork,
        iwork, *liwork,
        dwork,
        info );
}

#endif /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_zhegst MAGMA_FORTRAN_NAME( zhegst, ZHEGST )
void magmaf_zhegst(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    magmaDoubleComplex *a, magma_int_t *lda,
    magmaDoubleComplex *b, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_zhegst(
        *itype, *uplo, *n,
        a, *lda,
        b, *ldb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on CPU / Multi-GPU
*/
#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_zgeev_m MAGMA_FORTRAN_NAME( zgeev_m, ZGEEV_M )
void magmaf_zgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *W,
    magmaDoubleComplex *vl, magma_int_t *ldvl,
    magmaDoubleComplex *vr, magma_int_t *ldvr,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_zgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        W,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#else
#define magmaf_zgeev_m MAGMA_FORTRAN_NAME( zgeev_m, ZGEEV_M )
void magmaf_zgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaDoubleComplex *A, magma_int_t *lda,
    double *WR,
    double *WI,
    magmaDoubleComplex *vl, magma_int_t *ldvl,
    magmaDoubleComplex *vr, magma_int_t *ldvr,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        WR,
        WI,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#endif

#define magmaf_zgehrd_m MAGMA_FORTRAN_NAME( zgehrd_m, ZGEHRD_M )
void magmaf_zgehrd_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magmaDoubleComplex *T,
    magma_int_t *info )
{
    magma_zgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magmaf_zunghr_m MAGMA_FORTRAN_NAME( zunghr_m, ZUNGHR_M )
void magmaf_zunghr_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zunghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magmaf_zungqr_m MAGMA_FORTRAN_NAME( zungqr_m, ZUNGQR_M )
void magmaf_zungqr_m(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaDoubleComplex *A, magma_int_t *lda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zungqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on GPU
*/
#define magmaf_zgels_gpu MAGMA_GPU_FORTRAN_NAME( zgels, ZGELS )
void magmaf_zgels_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magmaDoubleComplex *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgels_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_zgels3_gpu MAGMA_GPU_FORTRAN_NAME( zgels3, ZGELS3 )
void magmaf_zgels3_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magmaDoubleComplex *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgels3_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_zgelqf_gpu MAGMA_GPU_FORTRAN_NAME( zgelqf, ZGELQF )
void magmaf_zgelqf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgelqf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_zgeqrf_gpu MAGMA_GPU_FORTRAN_NAME( zgeqrf, ZGEQRF )
void magmaf_zgeqrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_zgeqrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_zgeqrf2_gpu MAGMA_GPU_FORTRAN_NAME( zgeqrf2, ZGEQRF2 )
void magmaf_zgeqrf2_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    magma_int_t *info )
{
    magma_zgeqrf2_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        info );
}

#define magmaf_zgeqrf3_gpu MAGMA_GPU_FORTRAN_NAME( zgeqrf3, ZGEQRF3 )
void magmaf_zgeqrf3_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_zgeqrf3_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_zgeqrs_gpu MAGMA_GPU_FORTRAN_NAME( zgeqrs, ZGEQRS )
void magmaf_zgeqrs_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    magmaDoubleComplex *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_zgeqrs_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_zgeqrs3_gpu MAGMA_GPU_FORTRAN_NAME( zgeqrs3, ZGEQRS3 )
void magmaf_zgeqrs3_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    magmaDoubleComplex *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_zgeqrs3_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_zgessm_gpu MAGMA_GPU_FORTRAN_NAME( zgessm, ZGESSM )
void magmaf_zgessm_gpu(
    char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k, magma_int_t *ib,
    magma_int_t *ipiv,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL, magma_int_t *lddl,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_zgessm_gpu(
        *storev, *m, *n, *k, *ib,
        ipiv,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL), *lddl,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_zgesv_gpu MAGMA_GPU_FORTRAN_NAME( zgesv, ZGESV )
void magmaf_zgesv_gpu(
    magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_zgesv_gpu(
        *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_zgetrf_gpu MAGMA_GPU_FORTRAN_NAME( zgetrf, ZGETRF )
void magmaf_zgetrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_zgetrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        ipiv,
        info );
}

#define magmaf_zgetrf_nopiv_gpu MAGMA_GPU_FORTRAN_NAME( zgetrf_nopiv, ZGETRF_NOPIV )
void magmaf_zgetrf_nopiv_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_zgetrf_nopiv_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_zgetri_gpu MAGMA_GPU_FORTRAN_NAME( zgetri, ZGETRI )
void magmaf_zgetri_gpu(
    magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zgetri_gpu(
        *n,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dwork), *lwork,
        info );
}

#define magmaf_zgetrs_gpu MAGMA_GPU_FORTRAN_NAME( zgetrs, ZGETRS )
void magmaf_zgetrs_gpu(
    char *trans, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_zgetrs_gpu(
        *trans, *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_zlarfb_gpu MAGMA_GPU_FORTRAN_NAME( zlarfb, ZLARFB )
void magmaf_zlarfb_gpu(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dv, magma_int_t *ldv,
    devptr_t *dt, magma_int_t *ldt,
    devptr_t *dc, magma_int_t *ldc,
    devptr_t *dwork, magma_int_t *ldwork )
{
    magma_zlarfb_gpu(
        *side, *trans, *direct, *storev, *m, *n, *k,
        DEVPTR(dv), *ldv,
        DEVPTR(dt), *ldt,
        DEVPTR(dc), *ldc,
        DEVPTR(dwork), *ldwork );
}

#define magmaf_zlarfb_gpu_gemm MAGMA_FORTRAN_NAME( zlarfb_gpu_gemm, ZLARFB_GPU_GEMM )
void magmaf_zlarfb_gpu_gemm(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    const magmaDoubleComplex *dv, magma_int_t *ldv,
    const magmaDoubleComplex *dt, magma_int_t *ldt,
    magmaDoubleComplex *dc, magma_int_t *ldc,
    magmaDoubleComplex *dwork, magma_int_t *ldwork,
    magmaDoubleComplex *dworkvt, magma_int_t *ldworkvt )
{
    magma_zlarfb_gpu_gemm(
        *side, *trans, *direct, *storev, *m, *n, *k,
        dv, *ldv,
        dt, *ldt,
        dc, *ldc,
        dwork, *ldwork,
        dworkvt, *ldworkvt );
}

#define magmaf_zposv_gpu MAGMA_GPU_FORTRAN_NAME( zposv, ZPOSV )
void magmaf_zposv_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_zposv_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_zpotrf_gpu MAGMA_GPU_FORTRAN_NAME( zpotrf, ZPOTRF )
void magmaf_zpotrf_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_zpotrf_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_zpotri_gpu MAGMA_GPU_FORTRAN_NAME( zpotri, ZPOTRI )
void magmaf_zpotri_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_zpotri_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_zlauum_gpu MAGMA_GPU_FORTRAN_NAME( zlauum, ZLAUUM )
void magmaf_zlauum_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_zlauum_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_ztrtri_gpu MAGMA_GPU_FORTRAN_NAME( ztrtri, ZTRTRI )
void magmaf_ztrtri_gpu(
    char *uplo, char *diag, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_ztrtri_gpu(
        *uplo, *diag, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_zhetrd_gpu MAGMA_GPU_FORTRAN_NAME( zhetrd, ZHETRD )
void magmaf_zhetrd_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *d,
    double *e,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_zhetrd_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        info );
}

#define magmaf_zhetrd2_gpu MAGMA_GPU_FORTRAN_NAME( zhetrd2, ZHETRD2 )
void magmaf_zhetrd2_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *d,
    double *e,
    magmaDoubleComplex *tau,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    devptr_t *dwork, magma_int_t *ldwork,
    magma_int_t *info )
{
    magma_zhetrd2_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        DEVPTR(dwork), *ldwork,
        info );
}

#define magmaf_zpotrs_gpu MAGMA_GPU_FORTRAN_NAME( zpotrs, ZPOTRS )
void magmaf_zpotrs_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_zpotrs_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_zssssm_gpu MAGMA_GPU_FORTRAN_NAME( zssssm, ZSSSSM )
void magmaf_zssssm_gpu(
    char *storev, magma_int_t *m1, magma_int_t *n1, magma_int_t *m2, magma_int_t *n2, magma_int_t *k, magma_int_t *ib,
    devptr_t *dA1, magma_int_t *ldda1,
    devptr_t *dA2, magma_int_t *ldda2,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL2, magma_int_t *lddl2,
    magma_int_t *IPIV,
    magma_int_t *info )
{
    magma_zssssm_gpu(
        *storev, *m1, *n1, *m2, *n2, *k, *ib,
        DEVPTR(dA1), *ldda1,
        DEVPTR(dA2), *ldda2,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL2), *lddl2,
        IPIV,
        info );
}

#define magmaf_zungqr_gpu MAGMA_GPU_FORTRAN_NAME( zungqr, ZUNGQR )
void magmaf_zungqr_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dwork, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zungqr_gpu(
        *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dwork), *nb,
        info );
}

#define magmaf_zunmql2_gpu MAGMA_GPU_FORTRAN_NAME( zunmql2, ZUNMQL2 )
void magmaf_zunmql2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_zunmql2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_zunmqr_gpu MAGMA_GPU_FORTRAN_NAME( zunmqr, ZUNMQR )
void magmaf_zunmqr_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dA, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dC, magma_int_t *lddc,
    magmaDoubleComplex *hwork, magma_int_t *lwork,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_zunmqr_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dC), *lddc,
        hwork, *lwork,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_zunmqr2_gpu MAGMA_GPU_FORTRAN_NAME( zunmqr2, ZUNMQR2 )
void magmaf_zunmqr2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_zunmqr2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_zunmtr_gpu MAGMA_GPU_FORTRAN_NAME( zunmtr, ZUNMTR )
void magmaf_zunmtr_gpu(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    magmaDoubleComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_zunmtr_gpu(
        *side, *uplo, *trans, *m, *n,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_zheevd_gpu MAGMA_GPU_FORTRAN_NAME( zheevd, ZHEEVD )
void magmaf_zheevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *w,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevdx_gpu MAGMA_GPU_FORTRAN_NAME( zheevdx, ZHEEVDX )
void magmaf_zheevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevx_gpu MAGMA_GPU_FORTRAN_NAME( zheevx, ZHEEVX )
void magmaf_zheevx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    devptr_t *dz, magma_int_t *lddz,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *wz, magma_int_t *ldwz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_zheevx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_zheevr_gpu MAGMA_GPU_FORTRAN_NAME( zheevr, ZHEEVR )
void magmaf_zheevr_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    devptr_t *dz, magma_int_t *lddz,
    magma_int_t *isuppz,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *wz, magma_int_t *ldwz,
    magmaDoubleComplex *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevr_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        isuppz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#else
#define magmaf_zheevd_gpu MAGMA_GPU_FORTRAN_NAME( zheevd, ZHEEVD )
void magmaf_zheevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    magmaDoubleComplex *w,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_zheevdx_gpu MAGMA_GPU_FORTRAN_NAME( zheevdx, ZHEEVDX )
void magmaf_zheevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    magmaDoubleComplex *wa, magma_int_t *ldwa,
    magmaDoubleComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_zheevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#endif

#define magmaf_zhegst_gpu MAGMA_GPU_FORTRAN_NAME( zhegst, ZHEGST )
void magmaf_zhegst_gpu(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    devptr_t *db, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_zhegst_gpu(
        *itype, *uplo, *n,
        DEVPTR(da), *ldda,
        DEVPTR(db), *lddb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA utility function definitions
*/

#define magmaf_zprint MAGMA_FORTRAN_NAME( zprint, ZPRINT )
void magmaf_zprint(
    magma_int_t *m, magma_int_t *n,
    const magmaDoubleComplex  *A, magma_int_t *lda )
{
    magma_zprint(
        *m, *n,
        A, *lda );
}

#define magmaf_zprint_gpu MAGMA_GPU_FORTRAN_NAME( zprint, ZPRINT )
void magmaf_zprint_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda )
{
    magma_zprint_gpu(
        *m, *n,
        DEVPTR(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
