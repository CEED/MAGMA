#!/usr/bin/perl
#
# find occurances of ((n + nb - 1)/nb)*nb

$/ = '';

while( <> ) {
	if (    m@      \(.*\+ \s* 31 \s* \) \s* / \s* 32 \s* \* \s* 32@x           #  (n+31)/32*32
	     or m@      \(.*\+ \s* 63 \s* \) \s* / \s* 64 \s* \* \s* 64@x           #  (n+63)/64*64
	     
	     or m@\(\s* \(.*\+ \s* 31 \s* \) \s* / \s* 32 \s* \) \s* \* \s* 32@x   # ((n+31)/32)*32
	     or m@\(\s* \(.*\+ \s* 63 \s* \) \s* / \s* 64 \s* \) \s* \* \s* 64@x   # ((n+63)/64)*64
	     
	     or m@\(.*\+ \s* 15 \s* \) \s* / \s* 16@x   #  (n+15)/16
	     or m@\(.*\+ \s* 31 \s* \) \s* / \s* 32@x   #  (n+31)/32
	     or m@\(.*\+ \s* 63 \s* \) \s* / \s* 64@x   #  (n+63)/64
	     
	     or m@\(.*\+ \s* ([\w\.]+) \s*- \s* 1 \s*\) \s* / \s* \1@x                    # (n+nb-1)/nb
	     or m@\(.*                    - \s* 1 \s*\) \s* / \s* [\w\.]+ \s*\+ \s* 1@x   # (n-1)/nb+1
	     
	     or m@\+ .* % .* != \s* 0@x                 # n/nb + (n%nb != 0)
	) {
		#print $ARGV, "\n";
		printf( "%-32s %s\n", $ARGV.":", $& );
	}
}
