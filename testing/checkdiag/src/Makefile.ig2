#MAKE = make -j4

CUDADIR=/mnt/scratch/cuda-3.2
#PLASMADIR = $(HOME)/plasma/TRU
#CC = gcc        #       -g   -pg  #-std=c99 
#FC = gfortran   #       -g   -pg
#FL = gfortran -fopenmp   #       -g   -pg  # -fopenmp   



#OPTC   = -O2  -m64  -fPIC
#OPTF   = -O2  -m64  -fPIC
#OPTL   = -O2  -m64  -fPIC
##LIBBLAS= -L${MKL_ROOT}/lib/em64t -Wl,--start-group -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group  # mkl sequentiel
#LIBBLAS     =  -L${MKL_ROOT}/lib/em64t -Wl,--start-group  -lmkl_gf_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group  # mkl multithreads il faut ajouter -openmp ou -fopenmp au linkage

#INCPLASMA   =  -I$(PLASMADIR)/include  -I$(PLASMADIR)/control  -I$(PLASMADIR)/compute -I$(PLASMADIR)/quark -I$(HOME)/plasma/plasma-installer/install/include   
#LIBPLASMA   = -L$(PLASMADIR)/quark -L$(PLASMADIR)/lib -L$(HOME)/plasma/plasma-installer/install/lib  \
	      -lcoreblas -lplasma -lquark -llapack -lcblas -llapacke -llapack_cwrapper

#
# NVCC options for the different cards
#

GPU_TARGET=Fermi

#TESLAOPT = -arch sm_13 -DGPUSHMEM=130 -gencode arch=compute_13,code=compute_13 -gencode arch=compute_10,code=compute_10
#FERMIOPT = -arch sm_20 -DGPUSHMEM=200

#ifeq (${GPU_TARGET}, Tesla)
#        GPUOPT = ${TESLAOPT}
#        OPTS   += -DGPUSHMEM=130
#        LDOPTS += -DGPUSHMEM=130
#endif
#
#ifeq (${GPU_TARGET}, Fermi)
#        GPUOPT = ${FERMIOPT}
#        OPTS   += -DGPUSHMEM=200
#        LDOPTS += -DGPUSHMEM=200
#endif

PLASMADIR = $(HOME)/plasma/TRU_Feb
#PLASMADIR = $(HOME)/plasma/TRU_last
#CUDA      = nvcc
#OPTCUDA   = --compiler-options -fno-strict-aliasing -DUNIX -O3



CC = gcc        #     -g  # -pg  #-std=c99 
FC = gfortran -g # -fopenmp  #     -g  # -pg
FL = gcc   #   -openmp   #     -g #  -pg  # -fopenmp   
#OPTC   = -O0
#OPTF   = -O0
#OPTL   = -O0
OPTS   = -O3  -m64  -fPIC
FOPTS   = -O3  -m64  -fPIC
OPTL   = -O3  -m64  -fPIC
MKL_ROOT=/mnt/scratch/sw/intel/11.1.069/mkl/
LIBBLAS= -L${MKL_ROOT}/lib/em64t -Wl,--start-group -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group  # mkl sequentiel
#LIBBLAS     =  -L${MKL_ROOT}/lib/em64t -Wl,--start-group  -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -Wl,--end-group  # mkl multithreads il faut ajouter -openmp ou -fopenmp au linkage


#CC   = icc     #   -g  # -pg    
#FC   = ifort   #   -g  #  -pg 
#FL   = ifort     #   -g  # ifort  -openmp #  -openmp  # -g   -pg #-openmp

#OPTC      = -O3 -m64 # -fast 
#OPTF      = -O3 -m64 #-fast 
#OPTL      = -O3 -m64 -nofor_main #-fast #-nofor_main
#LIBBLAS     =  -L${MKL_ROOT}/lib/em64t -Wl,--start-group  -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group  # mkl sequentiel
#LIBBLAS     =  -L${MKL_ROOT}/lib/intel64 -Wl,--start-group  -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group  # mkl multithreads il faut ajouter -openmp ou -fopenmp au linkage




# What archiving to use
ARCH = ar rv  

# What to use for indexing the archive
RANLIB = ranlib 







INCPLASMA    =   -I/home/haidar/plasma/plasma-installer/install/include
#INCDLAED    =  -I/mnt/scratch/sw/intel/11.1.069/mkl/include
LIBSSS      =  -lpthread -lrt -lm  -lgfortran  -L/home/haidar/plasma/plasma-installer/install/lib -llapacke # `pkg-config --libs hwloc`  # -L/home/mfaverge/opt/x86_64/intel/lib  -llapack

INCCHECK    = -I/home/haidar/MATLAB/Eigenvalue/sym-eig/codes/checkdiag/include 
LIBCHECK    = -L/home/haidar/MATLAB/Eigenvalue/sym-eig/codes/checkdiag/lib -lcheck 





INCPAR      =  $(INCMAC)  $(INCCHECK) $(INCPLASMA)
LIBPAR      = $(LIBBLAS)  $(LIBSSS)  $(LIBBLAS)  $(LIBCHECK)


#LIBPAR      = $(LIBPLASMA) $(LIBMKL) $(LIBCHECK) $(LIBSSS)  $(LIBCUDA) $(LIBBLAS) 

